// Hello world example

// This is free and unencumbered software released into the public domain.
// See ../LICENSE.unlicense

data nl_string = array(w8) { 10 0 };
data spc_string = array(w8) { 32 0 };

import builtin.print (ptr - );
import builtin.int_to_string (w - ptr);
import builtin.concat_string (ptr ptr - ptr);

import builtin.make_tag (ptr ptr - ptr);
import builtin.shift_make_tag (ptr ptr - ptr);
import builtin.break_tag (ptr - ptr ptr);
import builtin.break_shift_tag (ptr - ptr ptr);

proc print_int_nl(w -) {
    builtin.int_to_string
    get_env load main_s 1:ptr drop
    builtin.concat_string
    builtin.print
    ret
};

proc print_2_int_nl(w w -) {
    swap builtin.int_to_string swap builtin.int_to_string
   
    // spc
    get_env load main_s 2:ptr drop
    swap
    // nl
    get_env load main_s 1:ptr drop

    builtin.concat_string builtin.concat_string builtin.concat_string
    builtin.print

    ret
};

proc main_p (- w) {
    12 0 builtin.make_tag print_int_nl
    12 1 builtin.make_tag print_int_nl
    9 2 builtin.shift_make_tag print_int_nl
    9 3 builtin.shift_make_tag print_int_nl

    256 builtin.break_tag print_2_int_nl
    257 builtin.break_tag print_2_int_nl
    258 builtin.break_tag print_2_int_nl
    259 builtin.break_tag print_2_int_nl

    256 builtin.break_shift_tag print_2_int_nl
    257 builtin.break_shift_tag print_2_int_nl
    258 builtin.break_shift_tag print_2_int_nl
    259 builtin.break_shift_tag print_2_int_nl

    0 ret
};

struct main_s { ptr ptr };
data main_d = main_s { nl_string spc_string };
closure main = main_p main_d;
entry main;

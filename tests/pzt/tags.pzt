// Hello world example

// This is free and unencumbered software released into the public domain.
// See ../LICENSE.unlicense

data nl_string = array(w8) { 10 0 };
data spc_string = array(w8) { 32 0 };

proc builtin.print (ptr - );
proc builtin.int_to_string (w - ptr);
proc builtin.concat_string (ptr ptr - ptr);

proc builtin.make_tag (ptr ptr - ptr);
proc builtin.shift_make_tag (ptr ptr - ptr);
proc builtin.break_tag (ptr - ptr ptr);
proc builtin.break_shift_tag (ptr - ptr ptr);

proc print_int_nl(w -) {
    call builtin.int_to_string
    nl_string
    call builtin.concat_string
    call builtin.print
    ret
};

proc print_2_int_nl(w w -) {
    swap
    call builtin.int_to_string
    swap
    call builtin.int_to_string
   
    spc_string swap nl_string

    call builtin.concat_string
    call builtin.concat_string
    call builtin.concat_string
    call builtin.print

    ret
};

proc main (- w) {
    12 ze:w32:ptr 0 ze:w32:ptr call builtin.make_tag call print_int_nl
    12 ze:w32:ptr 1 ze:w32:ptr call builtin.make_tag call print_int_nl
    9  ze:w32:ptr 2 ze:w32:ptr call builtin.shift_make_tag call print_int_nl
    9  ze:w32:ptr 3 ze:w32:ptr call builtin.shift_make_tag call print_int_nl

    256 ze:w32:ptr call builtin.break_tag call print_2_int_nl
    257 ze:w32:ptr call builtin.break_tag call print_2_int_nl
    258 ze:w32:ptr call builtin.break_tag call print_2_int_nl
    259 ze:w32:ptr call builtin.break_tag call print_2_int_nl

    256 ze:w32:ptr call builtin.break_shift_tag call print_2_int_nl
    257 ze:w32:ptr call builtin.break_shift_tag call print_2_int_nl
    258 ze:w32:ptr call builtin.break_shift_tag call print_2_int_nl
    259 ze:w32:ptr call builtin.break_shift_tag call print_2_int_nl

    0 ret
};

